version: "3"

services:
  # Ouroboros: Automatically update your running Docker containers to the latest available image
  # https://github.com/pyouroboros/ouroboros
  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    networks:
      - ${NET}
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - TZ=${TZ} 
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Pihole: Network-wide Ad Blocking
  # https://hub.docker.com/r/pihole/pihole
  pihole:
    container_name: pihole53
    image: pihole/pihole:latest
    hostname: pihole53
    cap_add:
      - NET_ADMIN
    networks:
      - ${NET}
    dns:
      - 127.0.0.1
      - 1.1.1.1
    ports:
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
      - './backups/:/backups/'
    environment:
      WEBPASSWORD: ${PASS}
      TZ: ${TZ}
    restart: unless-stopped

  # Homer: A fancy homepage for self-hosted services
  # https://hub.docker.com/r/b4bz/homer
  homer:
    container_name: homer
    image: b4bz/homer:latest
    hostname: homer
    networks:
      - ${NET}
    ports:
      - 8080:8080
    volumes:
      - ${DOCKER_PATH}/homer:/www/assets
    user: 0:0
    environment:
      - INIT_ASSETS=1
    restart: unless-stopped

  # Wireguard VPN server
  # https://hub.docker.com/r/linuxserver/wireguard
  wireguard:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    networks:
      - ${NET}
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ} 
      - SERVERURL=${WG_HOST}
      - SERVERPORT=51820
      - PEERS=${WG_PEERS}
      - PEERDNS=auto
    volumes:
      - ${DOCKER_PATH}/wgserver/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  # Home Assistant for home automations
  homeassistant:
    image: lscr.io/linuxserver/homeassistant:latest
    container_name: homeassistant
    networks:
      - ${NET}
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Jerusalem
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_PATH}/home-assistant:/config
    ports:
      - 8123:8123 #optional
    restart: unless-stopped

  # Nextcloud - self hosted cloud service
  nextcloud_db:
    image: mariadb
    container_name: nextcloud_mariadb
    restart: always
    networks:
      - ${NET}
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${PASS}
      - MYSQL_PASSWORD=${PASS}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: always
    depends_on:
      - nextcloud_db
    networks:
      - ${NET}
    ports:
      - 8888:80
    links:
      - nextcloud_db
    volumes:
      - nextcloud:/var/www/html
    environment:
      - MYSQL_PASSWORD=${PASS}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=${USER}
      - MYSQL_HOST=db

  # Guacamole - Remote Session manager
    # networks:
    #   ${NET}:
    #     ipv4_address: 192.168.10.8

  # Vaultwarden - Selfhosted password manager
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    networks:
      - ${NET}
    expose:
      - "80"
      - "3012"
    volumes:
      - ${DOCKER_PATH}/Data/Vaultwarden:/data
    restart: unless-stopped
    environment:
      WEBSOCKET_ENABLED: ${WEBSOCKET_ENABLED}
      SIGNUPS_ALLOWED: ${SIGNUPS_ALLOWED}
      TZ: ${TZ}

  # Portainer - Docker deployement GUI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9000:9000
    networks:
      - ${NET}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data

  # Elastic Stack and Elatic Security
    # networks:
    #   ${NET}:
    #     ipv4_address: 192.168.10.11-13

volumes:
  nextcloud:
  db:

networks:
  asgard: 
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 10.10.10.0/24
          gateway: 10.10.10.254
          ip_range: 10.10.10.0/24 # IP from this pool are assigned automatically